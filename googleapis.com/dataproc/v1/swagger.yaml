swagger: '2.0'
schemes:
  - https
host: dataproc.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: An API for managing Hadoop-based clusters and jobs on Google Cloud Platform.
  title: Google Cloud Dataproc
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://apis-guru.github.io/api-models/cache/googleapis.com/dataproc/v1/logo.png'
  x-origin:
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/dataproc/v1/rest'
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: dataproc
externalDocs:
  url: 'https://cloud.google.com/dataproc/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
      'https://www.googleapis.com/auth/logging.admin': Administrate log data for your projects
      'https://www.googleapis.com/auth/logging.read': View log data for your projects
      'https://www.googleapis.com/auth/logging.write': Submit log data for your projects
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
paths:
  '/v1/media/{resourceName}':
    get:
      description: 'Method for media download. Download is supported on the URI `/v1/media/{+name}?alt=media`.'
      operationId: dataproc.media.download
      parameters:
        - description: 'Name of the media that is being downloaded. See [][ByteStream.ReadRequest.resource_name].'
          in: path
          name: resourceName
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Media'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/logging.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/logging.read'
        - Oauth2:
            - 'https://www.googleapis.com/auth/logging.write'
      tags:
        - media
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/$.xgafv'
    post:
      consumes:
        - application/octet-stream
      description: 'Method for media upload. Upload is supported on the URI `/upload/v1/media/{+name}`.'
      operationId: dataproc.media.upload
      parameters:
        - description: 'Name of the media that is being downloaded. See [][ByteStream.ReadRequest.resource_name].'
          in: path
          name: resourceName
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Media'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Media'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/logging.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/logging.read'
        - Oauth2:
            - 'https://www.googleapis.com/auth/logging.write'
      tags:
        - media
definitions:
  DiagnoseClusterOutputLocation:
    description: The location where output from diagnostic command can be found.
    properties:
      outputUri:
        description: '[Output-only] The Google Cloud Storage URI of the diagnostic output. This will be a plain text file with summary of collected diagnostics.'
        type: string
    type: object
  Media:
    description: Media resource.
    properties:
      resourceName:
        description: Name of the media resource.
        type: string
    type: object
  OperationMetadata:
    description: Metadata describing the operation.
    properties:
      clusterName:
        description: Name of the cluster for the operation.
        type: string
      clusterUuid:
        description: Cluster UUId for the operation.
        type: string
      details:
        description: A message containing any operation metadata details.
        type: string
      endTime:
        description: The time that the operation completed.
        type: string
      innerState:
        description: A message containing the detailed operation state.
        type: string
      insertTime:
        description: The time that the operation was requested.
        type: string
      startTime:
        description: The time that the operation was started by the server.
        type: string
      state:
        description: A message containing the operation state.
        enum:
          - UNKNOWN
          - PENDING
          - RUNNING
          - DONE
        type: string
      status:
        $ref: '#/definitions/OperationStatus'
        description: '[Output-only] Current operation status.'
      statusHistory:
        description: '[Output-only] Previous operation status.'
        items:
          $ref: '#/definitions/OperationStatus'
        type: array
    type: object
  OperationStatus:
    description: The status of the operation.
    properties:
      details:
        description: A message containing any operation metadata details.
        type: string
      innerState:
        description: A message containing the detailed operation state.
        type: string
      state:
        description: A message containing the operation state.
        enum:
          - UNKNOWN
          - PENDING
          - RUNNING
          - DONE
        type: string
      stateStartTime:
        description: The time this state was entered.
        type: string
    type: object
